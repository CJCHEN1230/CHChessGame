<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        urEIRsmf/9k=
</value>
  </data>
</root>